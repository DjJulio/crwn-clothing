{"ast":null,"code":"var _jsxFileName = \"/Users/julionavarro/Desktop/React/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      signUpStart\n    } = this.props;\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: this.state.displayName,\n    onChange: this.handleOnChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: this.state.email,\n    onChange: this.handleOnChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: this.state.password,\n    onChange: this.handleOnChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: this.state.confirmPassword,\n    onChange: this.handleOnChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/julionavarro/Desktop/React/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","props","displayName","confirmPassword","state","alert","handleOnChange","name","value","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' })\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n        if(password !== confirmPassword) {\n            alert('Passwords do not match');\n            return;\n        }\n        signUpStart({ displayName, email, password });\n    }\n\n    const handleOnChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    return (\n        <div className=\"sign-up\">\n            <h2 className=\"title\">I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={this.state.displayName}\n                    onChange={this.handleOnChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={this.state.email}\n                    onChange={this.handleOnChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.handleOnChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={this.state.confirmPassword}\n                    onChange={this.handleOnChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type=\"submit\">SIGN UP</CustomButton>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}