{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fecthCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fecthCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  errorMessaage: errorMessage\n});\nexport const fectchCollectionsStartAsyn = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fecthCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fecthCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/julionavarro/Desktop/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fecthCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fecthCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","errorMessaage","fectchCollectionsStartAsyn","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDC,EAAAA,aAAa,EAAEF;AAFqC,CAAL,CAA5C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AACAa,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAGIC,QAAQ,IAAI;AACR,YAAMb,aAAa,GAAGL,+BAA+B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACT,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACP,KAND,EAOCc,KAPD,CAOOC,KAAK,IAAIP,QAAQ,CAACL,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAPxB;AAQH,GAXD;AAYH,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fecthCollectionsSuccess = collectionMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n});\n\nexport const fecthCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    errorMessaage: errorMessage\n});\n\nexport const fectchCollectionsStartAsyn = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        collectionRef\n        .get()\n        .then(\n            snapshot => {\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n                dispatch(fecthCollectionsSuccess(collectionMap));\n        })\n        .catch(error => dispatch(fecthCollectionsFailure(error.message)))\n    }   \n}"]},"metadata":{},"sourceType":"module"}